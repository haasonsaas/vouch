version: '3.8'

services:
  # Vouch Server
  vouch-server:
    image: ghcr.io/haasonsaas/vouch-server:latest
    container_name: vouch-server
    ports:
      - "8080:8080"
    volumes:
      - ./policies.yaml:/etc/vouch/policies.yaml:ro
      - vouch-data:/var/lib/vouch
    environment:
      - TAILSCALE_API_KEY=${TAILSCALE_API_KEY}
      - TAILNET=${TAILNET:-example.com}
    command: >
      --policy /etc/vouch/policies.yaml
      --listen :8080
      --db /var/lib/vouch/vouch.db
      --enforce
      --tailscale-api-key ${TAILSCALE_API_KEY}
      --tailnet ${TAILNET}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/v1/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - vouch

  # Example Agent (run this on your actual hosts instead)
  # vouch-agent:
  #   image: ghcr.io/haasonsaas/vouch-agent:latest
  #   container_name: vouch-agent
  #   depends_on:
  #     - vouch-server
  #   environment:
  #     - SERVER_URL=http://vouch-server:8080
  #     - REPORT_INTERVAL=5m
  #   command: >
  #     --server http://vouch-server:8080
  #     --interval 5m
  #   restart: unless-stopped
  #   # For posture collection, needs host access
  #   privileged: true
  #   network_mode: host
  #   volumes:
  #     - /etc:/host/etc:ro
  #     - /var:/host/var:ro

  # Grafana (optional - for dashboards)
  grafana:
    image: grafana/grafana:latest
    container_name: vouch-grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=
    restart: unless-stopped
    networks:
      - vouch

  # Prometheus (optional - for metrics)
  prometheus:
    image: prom/prometheus:latest
    container_name: vouch-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: unless-stopped
    networks:
      - vouch

volumes:
  vouch-data:
  grafana-data:
  prometheus-data:

networks:
  vouch:
    driver: bridge
